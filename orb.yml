version: 2.1

orbs:
  ci-caching: serbiatech/ci-caching@0.0.5

# Orb jobs

jobs:

  # Install dependencies job

  install-dependencies-with-docker:
    machine: true
    parameters:
      dependencyCheckSumFile:
        type: string
        default: "./composer.lock"
      dependencyCachePath:
        type: string
        default: "./vendor"
      dependencyAdditionalCacheKey:
        type: string
        default: "v1"
      sshKeyFilename:
        type: string
        default: "docker_rsa"
      sshFingerprint:
        type: string
        default: ""
      dockerImageTag:
        type: string
        default: "ci-composer"
      dockerFolder:
        type: string
        default: "./docker/composer"
      dockerAdditionalCacheKey:
        type: string
        default: "v1"
      localMountPath:
        type: string
        default: "${PWD}"
      dockerVolumePath:
        type: string
        default: "/var/www/html"
      installCommand:
        type: string
        default: "install"
    steps:
      - checkout
      - ci-caching/dependency-cache-load:
          checkSumFile: << parameters.dependencyCheckSumFile >>
          additionalCacheKey: << parameters.dependencyAdditionalCacheKey >>
      - ci-caching/dependency-check:
          cacheDataPath: << parameters.dependencyCachePath >>
      - add-ssh-key-command:
          sshKeyFilename: << parameters.sshKeyFilename >>
          sshFingerprint: << parameters.sshFingerprint >>
      - ci-caching/docker-images-cache-load:
          dockerCheckSumDir: << parameters.dockerFolder >>
          additionalCacheKey: << parameters.dockerAdditionalCacheKey >>
          baseCacheName: << parameters.dockerImageTag >>
      - ci-caching/docker-layers-load:
          cacheFile: ~/<< parameters.dockerImageTag >>.tar
      - run:
          name: Install php dependencies
          command: |
            docker run --rm -v ~/.ssh/<< parameters.sshKeyFilename >>:/home/www-data/.ssh/id_rsa:ro -v "<< parameters.localMountPath >>":<< parameters.dockerVolumePath >> << parameters.dockerImageTag >> << parameters.installCommand >>
      - ci-caching/dependency-cache-save:
          checkSumFile: << parameters.dependencyCheckSumFile >>
          cacheDataPath: << parameters.dependencyCachePath >>
          additionalCacheKey: << parameters.dependencyAdditionalCacheKey >>

  # Run coverage

  coverage:
    machine: true
    parameters:
      coverageDir:
        type: string
        default: "./build/logs/phpunit/coverage"
      testResultDir:
        type: string
        default: "./build/logs/phpunit"
      dockerComposeFile:
        type: string
        default: "./docker/docker-compose.ci.yml"
      dockerCheckSumDir:
        type: string
        default: "./docker"
      dependencyCheckSumFile:
        type: string
        default: "./composer.lock"
      command:
        type: string
        default: "run coverage"
      dockerTimezone:
        type: string
        default: "UTC"
      dockerLanguage:
        type: string
        default: "en_US.UTF-8"
    steps:
      - ci-caching/run-docker-from-restored-caches:
          dockerCheckSumDir: << parameters.dockerCheckSumDir >>
          dependencyCheckSumFile: << parameters.dependencyCheckSumFile >>
          dockerComposeFile: << parameters.dockerComposeFile >>
      - ci-caching/execute-with-external-container:
          info: Execute tests with code coverage
          container: composer
          dockerComposeFile: << parameters.dockerComposeFile >>
          command: << parameters.command >>
      - store_artifacts:
          path: << parameters.coverageDir >>
      - store_test_results:
          path: << parameters.testResultDir >>

  # Run static analysis

  static-analysis:
    machine: true
    parameters:
      testResultDir:
        type: string
        default: "./build/logs/phpstan"
      dockerComposeFile:
        type: string
        default: "./docker/docker-compose.ci.yml"
      dockerCheckSumDir:
        type: string
        default: "./docker"
      dependencyCheckSumFile:
        type: string
        default: "./composer.lock"
      command:
        type: string
        default: "run static-analysis"
      dockerTimezone:
        type: string
        default: "UTC"
      dockerLanguage:
        type: string
        default: "en_US.UTF-8"
    steps:
      - ci-caching/run-docker-from-restored-caches:
          dockerCheckSumDir: << parameters.dockerCheckSumDir >>
          dependencyCheckSumFile: << parameters.dependencyCheckSumFile >>
          dockerComposeFile: << parameters.dockerComposeFile >>
      - ci-caching/execute-with-external-container:
          info: Execute static analysis tests
          container: composer
          dockerComposeFile: << parameters.dockerComposeFile >>
          command: << parameters.command >>
      - store_test_results:
          path: << parameters.testResultDir >>

  # Run code style

  code-style:
    machine: true
    parameters:
      testResultDir:
        type: string
        default: "./build/logs/phpcs"
      dockerComposeFile:
        type: string
        default: "./docker/docker-compose.ci.yml"
      dockerCheckSumDir:
        type: string
        default: "./docker"
      dependencyCheckSumFile:
        type: string
        default: "./composer.lock"
      command:
        type: string
        default: "run code-style"
      dockerTimezone:
        type: string
        default: "UTC"
      dockerLanguage:
        type: string
        default: "en_US.UTF-8"
    steps:
      - ci-caching/run-docker-from-restored-caches:
          dockerCheckSumDir: << parameters.dockerCheckSumDir >>
          dependencyCheckSumFile: << parameters.dependencyCheckSumFile >>
          dockerComposeFile: << parameters.dockerComposeFile >>
      - ci-caching/execute-with-external-container:
          info: Execute code style tests
          container: composer
          dockerComposeFile: << parameters.dockerComposeFile >>
          command: << parameters.command >>
      - store_test_results:
          path: << parameters.testResultDir >>

  # Run infection tests

  infection:
    machine: true
    parameters:
      testResultDir:
        type: string
        default: "./build/logs/infection"
      dockerComposeFile:
        type: string
        default: "./docker/docker-compose.ci.yml"
      dockerCheckSumDir:
        type: string
        default: "./docker"
      dependencyCheckSumFile:
        type: string
        default: "./composer.lock"
      command:
        type: string
        default: "run infection"
      dockerTimezone:
        type: string
        default: "UTC"
      dockerLanguage:
        type: string
        default: "en_US.UTF-8"
    steps:
      - ci-caching/run-docker-from-restored-caches:
          dockerCheckSumDir: << parameters.dockerCheckSumDir >>
          dependencyCheckSumFile: << parameters.dependencyCheckSumFile >>
          dockerComposeFile: << parameters.dockerComposeFile >>
      - ci-caching/execute-with-external-container:
          info: Execute infection tests
          container: composer
          dockerComposeFile: << parameters.dockerComposeFile >>
          command: << parameters.command >>
      - store_test_results:
          path: << parameters.testResultDir >>

# Orb commands

commands:

  # Add SSH key command

  add-ssh-key-command:
    parameters:
      sshKeyFilename:
        type: string
        default: "docker_rsa"
      sshFingerprint:
        type: string
        default: ""
    steps:
      - when:
          condition: << parameters.sshFingerprint >>
          steps:
            - add_ssh_keys:
                fingerprints:
                  - << parameters.sshFingerprint >>
            - run:
                name: Copy ssh key
                command: |
                  SSH_FINGERPRINT=<< parameters.sshFingerprint >>
                  cp ~/.ssh/id_rsa_"${SSH_FINGERPRINT//:}" ~/.ssh/<< parameters.sshKeyFilename >>
